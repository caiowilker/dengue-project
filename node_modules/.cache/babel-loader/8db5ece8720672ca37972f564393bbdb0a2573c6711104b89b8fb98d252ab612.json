{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fam\\xEDlia\\\\Documents\\\\dengue-project\\\\src\\\\components\\\\RelatoChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { buscarRelatosPorIntervaloDeDatas } from '../services/firebaseService';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RelatoChart() {\n  _s();\n  const [dadosGrafico, setDadosGrafico] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [erro, setErro] = useState('');\n  useEffect(() => {\n    const fetchRelatos = async () => {\n      try {\n        const relatos = await buscarRelatosPorIntervaloDeDatas('2024-01-01', '2024-12-31');\n\n        // Criar um mapa para contar o número de relatos por dia\n        const contagemRelatos = {};\n        relatos.forEach(relato => {\n          const dataFormatada = new Date(relato.data).toLocaleDateString();\n          contagemRelatos[dataFormatada] = (contagemRelatos[dataFormatada] || 0) + 1;\n        });\n        const labels = Object.keys(contagemRelatos); // Datas\n        const dataset = Object.values(contagemRelatos); // Contagens\n\n        setDadosGrafico({\n          labels: labels,\n          datasets: [{\n            label: 'Focos de Dengue',\n            data: dataset,\n            fill: false,\n            borderColor: 'red'\n          }]\n        });\n      } catch (error) {\n        setErro(\"Erro ao carregar os relatos.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRelatos();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando dados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  if (erro) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gr\\xE1fico de Focos de Dengue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: dadosGrafico\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(RelatoChart, \"ZM9CyKmR/peegsH3bjahHD61WFQ=\");\n_c = RelatoChart;\nexport default RelatoChart;\nvar _c;\n$RefreshReg$(_c, \"RelatoChart\");","map":{"version":3,"names":["React","useEffect","useState","buscarRelatosPorIntervaloDeDatas","Line","jsxDEV","_jsxDEV","RelatoChart","_s","dadosGrafico","setDadosGrafico","labels","datasets","loading","setLoading","erro","setErro","fetchRelatos","relatos","contagemRelatos","forEach","relato","dataFormatada","Date","data","toLocaleDateString","Object","keys","dataset","values","label","fill","borderColor","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Família/Documents/dengue-project/src/components/RelatoChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { buscarRelatosPorIntervaloDeDatas } from '../services/firebaseService';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction RelatoChart() {\r\n    const [dadosGrafico, setDadosGrafico] = useState({ labels: [], datasets: [] });\r\n    const [loading, setLoading] = useState(true);\r\n    const [erro, setErro] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchRelatos = async () => {\r\n            try {\r\n                const relatos = await buscarRelatosPorIntervaloDeDatas('2024-01-01', '2024-12-31');\r\n\r\n                // Criar um mapa para contar o número de relatos por dia\r\n                const contagemRelatos = {};\r\n                relatos.forEach(relato => {\r\n                    const dataFormatada = new Date(relato.data).toLocaleDateString();\r\n                    contagemRelatos[dataFormatada] = (contagemRelatos[dataFormatada] || 0) + 1;\r\n                });\r\n\r\n                const labels = Object.keys(contagemRelatos); // Datas\r\n                const dataset = Object.values(contagemRelatos); // Contagens\r\n\r\n                setDadosGrafico({\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Focos de Dengue',\r\n                            data: dataset,\r\n                            fill: false,\r\n                            borderColor: 'red'\r\n                        }\r\n                    ]\r\n                });\r\n            } catch (error) {\r\n                setErro(\"Erro ao carregar os relatos.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchRelatos();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <p>Carregando dados...</p>;\r\n    }\r\n\r\n    if (erro) {\r\n        return <p style={{ color: 'red' }}>{erro}</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gráfico de Focos de Dengue</h2>\r\n            <Line data={dadosGrafico} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RelatoChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gCAAgC,QAAQ,6BAA6B;AAC9E,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC;IAAES,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,OAAO,GAAG,MAAMf,gCAAgC,CAAC,YAAY,EAAE,YAAY,CAAC;;QAElF;QACA,MAAMgB,eAAe,GAAG,CAAC,CAAC;QAC1BD,OAAO,CAACE,OAAO,CAACC,MAAM,IAAI;UACtB,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAACF,MAAM,CAACG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAChEN,eAAe,CAACG,aAAa,CAAC,GAAG,CAACH,eAAe,CAACG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9E,CAAC,CAAC;QAEF,MAAMX,MAAM,GAAGe,MAAM,CAACC,IAAI,CAACR,eAAe,CAAC,CAAC,CAAC;QAC7C,MAAMS,OAAO,GAAGF,MAAM,CAACG,MAAM,CAACV,eAAe,CAAC,CAAC,CAAC;;QAEhDT,eAAe,CAAC;UACZC,MAAM,EAAEA,MAAM;UACdC,QAAQ,EAAE,CACN;YACIkB,KAAK,EAAE,iBAAiB;YACxBN,IAAI,EAAEI,OAAO;YACbG,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE;UACjB,CAAC;QAET,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZjB,OAAO,CAAC,8BAA8B,CAAC;MAC3C,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOP,OAAA;MAAA4B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EAEA,IAAIvB,IAAI,EAAE;IACN,oBAAOT,OAAA;MAAGiC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEnB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACjD;EAEA,oBACIhC,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnChC,OAAA,CAACF,IAAI;MAACoB,IAAI,EAAEf;IAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd;AAAC9B,EAAA,CAvDQD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAyDpB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}