{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fam\\xEDlia\\\\Documents\\\\dengue-project\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\n// src/components/MapView.js\nimport React, { useEffect, useRef } from 'react';\nimport { getRelatos } from '../services/firebaseService';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapView() {\n  _s();\n  const mapRef = useRef(null); // useRef para garantir que o mapa seja inicializado apenas uma vez\n\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Inicialize o mapa apenas se ele ainda não foi criado\n      const mapInstance = L.map('map').setView([-15.7801, -47.9292], 4); // Centro do Brasil\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstance);\n      mapRef.current = mapInstance; // Armazena a instância do mapa em mapRef\n    }\n    const fetchRelatos = async () => {\n      const relatos = await getRelatos();\n      relatos.forEach(relato => {\n        const {\n          localizacao\n        } = relato;\n        const marker = L.marker([localizacao.latitude, localizacao.longitude]);\n        marker.addTo(mapRef.current).bindPopup(relato.descricao);\n      });\n    };\n    fetchRelatos();\n  }, []); // Array vazio para garantir que o useEffect rode apenas uma vez na montagem\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n_s(MapView, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","getRelatos","L","jsxDEV","_jsxDEV","MapView","_s","mapRef","current","mapInstance","map","setView","tileLayer","maxZoom","attribution","addTo","fetchRelatos","relatos","forEach","relato","localizacao","marker","latitude","longitude","bindPopup","descricao","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Família/Documents/dengue-project/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { getRelatos } from '../services/firebaseService';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction MapView() {\r\n    const mapRef = useRef(null); // useRef para garantir que o mapa seja inicializado apenas uma vez\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current) {\r\n            // Inicialize o mapa apenas se ele ainda não foi criado\r\n            const mapInstance = L.map('map').setView([-15.7801, -47.9292], 4); // Centro do Brasil\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                maxZoom: 19,\r\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            }).addTo(mapInstance);\r\n\r\n            mapRef.current = mapInstance; // Armazena a instância do mapa em mapRef\r\n        }\r\n\r\n        const fetchRelatos = async () => {\r\n            const relatos = await getRelatos();\r\n\r\n            relatos.forEach(relato => {\r\n                const { localizacao } = relato;\r\n                const marker = L.marker([localizacao.latitude, localizacao.longitude]);\r\n                marker.addTo(mapRef.current).bindPopup(relato.descricao);\r\n            });\r\n        };\r\n\r\n        fetchRelatos();\r\n    }, []); // Array vazio para garantir que o useEffect rode apenas uma vez na montagem\r\n\r\n    return <div id=\"map\" style={{ height: '100vh' }}></div>;\r\n}\r\n\r\nexport default MapView;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7BD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,MAAM,CAACC,OAAO,EAAE;MACjB;MACA,MAAMC,WAAW,GAAGP,CAAC,CAACQ,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACnET,CAAC,CAACU,SAAS,CAAC,oDAAoD,EAAE;QAC9DC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE;MACjB,CAAC,CAAC,CAACC,KAAK,CAACN,WAAW,CAAC;MAErBF,MAAM,CAACC,OAAO,GAAGC,WAAW,CAAC,CAAC;IAClC;IAEA,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,OAAO,GAAG,MAAMhB,UAAU,CAAC,CAAC;MAElCgB,OAAO,CAACC,OAAO,CAACC,MAAM,IAAI;QACtB,MAAM;UAAEC;QAAY,CAAC,GAAGD,MAAM;QAC9B,MAAME,MAAM,GAAGnB,CAAC,CAACmB,MAAM,CAAC,CAACD,WAAW,CAACE,QAAQ,EAAEF,WAAW,CAACG,SAAS,CAAC,CAAC;QACtEF,MAAM,CAACN,KAAK,CAACR,MAAM,CAACC,OAAO,CAAC,CAACgB,SAAS,CAACL,MAAM,CAACM,SAAS,CAAC;MAC5D,CAAC,CAAC;IACN,CAAC;IAEDT,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOZ,OAAA;IAAKsB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D;AAAC1B,EAAA,CA7BQD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}