{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fam\\xEDlia\\\\Documents\\\\dengue-project\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\n// src/components/MapView.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getRelatos, buscarRelatosPorIntervaloDeDatas } from '../services/firebaseService';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Define um ícone de marcador vermelho personalizado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst redIcon = new L.Icon({\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  className: 'red-icon' // Adiciona uma classe CSS para mais customização, se necessário\n});\nfunction MapView() {\n  _s();\n  const mapRef = useRef(null); // useRef para garantir que o mapa seja inicializado apenas uma vez\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  useEffect(() => {\n    if (!mapRef.current) {\n      // Inicializa o mapa\n      const mapInstance = L.map('map').setView([-15.7801, -47.9292], 4); // Centro do Brasil\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstance);\n      mapRef.current = mapInstance; // Armazena a instância do mapa em mapRef\n    }\n    const fetchRelatos = async () => {\n      const relatos = await getRelatos();\n\n      // Limpa os marcadores do mapa antes de adicionar novos\n      mapRef.current.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          mapRef.current.removeLayer(layer);\n        }\n      });\n      addMarkersToMap(relatos);\n    };\n    fetchRelatos();\n  }, []); // Array vazio para rodar apenas na montagem\n\n  const addMarkersToMap = relatos => {\n    relatos.forEach(relato => {\n      const {\n        localizacao,\n        descricao\n      } = relato;\n\n      // Verifique se `localizacao` e suas coordenadas estão definidas\n      if (localizacao && localizacao.latitude && localizacao.longitude) {\n        L.marker([localizacao.latitude, localizacao.longitude], {\n          icon: redIcon\n        }).addTo(mapRef.current).bindPopup(`<strong>Relato:</strong> ${descricao}`);\n      } else {\n        console.warn(\"Relato sem localização: \", relato); // Log de aviso\n      }\n    });\n  };\n  const handleFiltrar = async () => {\n    if (dataInicio && dataFim) {\n      const relatos = await buscarRelatosPorIntervaloDeDatas(dataInicio, dataFim);\n\n      // Limpa os marcadores do mapa antes de adicionar novos\n      mapRef.current.eachLayer(layer => {\n        if (layer instanceof L.Marker) {\n          mapRef.current.removeLayer(layer);\n        }\n      });\n      addMarkersToMap(relatos);\n    } else {\n      alert(\"Por favor, selecione um intervalo de datas.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data In\\xEDcio:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dataInicio,\n          onChange: e => setDataInicio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Data Fim:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dataFim,\n          onChange: e => setDataFim(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFiltrar,\n        children: \"Filtrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(MapView, \"6uCp/Qe/TLi7ovQzYoIRBRqh1nU=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getRelatos","buscarRelatosPorIntervaloDeDatas","L","jsxDEV","_jsxDEV","redIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","className","MapView","_s","mapRef","dataInicio","setDataInicio","dataFim","setDataFim","current","mapInstance","map","setView","tileLayer","maxZoom","attribution","addTo","fetchRelatos","relatos","eachLayer","layer","Marker","removeLayer","addMarkersToMap","forEach","relato","localizacao","descricao","latitude","longitude","marker","icon","bindPopup","console","warn","handleFiltrar","alert","children","style","margin","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","height","_c","$RefreshReg$"],"sources":["C:/Users/Família/Documents/dengue-project/src/components/MapView.js"],"sourcesContent":["// src/components/MapView.js\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { getRelatos, buscarRelatosPorIntervaloDeDatas } from '../services/firebaseService';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Define um ícone de marcador vermelho personalizado\r\nconst redIcon = new L.Icon({\r\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n    className: 'red-icon' // Adiciona uma classe CSS para mais customização, se necessário\r\n});\r\n\r\nfunction MapView() {\r\n    const mapRef = useRef(null); // useRef para garantir que o mapa seja inicializado apenas uma vez\r\n    const [dataInicio, setDataInicio] = useState('');\r\n    const [dataFim, setDataFim] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current) {\r\n            // Inicializa o mapa\r\n            const mapInstance = L.map('map').setView([-15.7801, -47.9292], 4); // Centro do Brasil\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                maxZoom: 19,\r\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            }).addTo(mapInstance);\r\n\r\n            mapRef.current = mapInstance; // Armazena a instância do mapa em mapRef\r\n        }\r\n\r\n        const fetchRelatos = async () => {\r\n            const relatos = await getRelatos();\r\n\r\n            // Limpa os marcadores do mapa antes de adicionar novos\r\n            mapRef.current.eachLayer((layer) => {\r\n                if (layer instanceof L.Marker) {\r\n                    mapRef.current.removeLayer(layer);\r\n                }\r\n            });\r\n\r\n            addMarkersToMap(relatos);\r\n        };\r\n\r\n        fetchRelatos();\r\n    }, []); // Array vazio para rodar apenas na montagem\r\n\r\n    const addMarkersToMap = (relatos) => {\r\n        relatos.forEach(relato => {\r\n            const { localizacao, descricao } = relato;\r\n\r\n            // Verifique se `localizacao` e suas coordenadas estão definidas\r\n            if (localizacao && localizacao.latitude && localizacao.longitude) {\r\n                L.marker([localizacao.latitude, localizacao.longitude], { icon: redIcon })\r\n                    .addTo(mapRef.current)\r\n                    .bindPopup(`<strong>Relato:</strong> ${descricao}`);\r\n            } else {\r\n                console.warn(\"Relato sem localização: \", relato); // Log de aviso\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleFiltrar = async () => {\r\n        if (dataInicio && dataFim) {\r\n            const relatos = await buscarRelatosPorIntervaloDeDatas(dataInicio, dataFim);\r\n\r\n            // Limpa os marcadores do mapa antes de adicionar novos\r\n            mapRef.current.eachLayer((layer) => {\r\n                if (layer instanceof L.Marker) {\r\n                    mapRef.current.removeLayer(layer);\r\n                }\r\n            });\r\n\r\n            addMarkersToMap(relatos);\r\n        } else {\r\n            alert(\"Por favor, selecione um intervalo de datas.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ margin: '10px' }}>\r\n                <label>\r\n                    Data Início:\r\n                    <input\r\n                        type=\"date\"\r\n                        value={dataInicio}\r\n                        onChange={(e) => setDataInicio(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Data Fim:\r\n                    <input\r\n                        type=\"date\"\r\n                        value={dataFim}\r\n                        onChange={(e) => setDataFim(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button onClick={handleFiltrar}>Filtrar</button>\r\n            </div>\r\n            <div id=\"map\" style={{ height: '100vh' }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}