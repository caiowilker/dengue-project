{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fam\\xEDlia\\\\Documents\\\\dengue-project\\\\src\\\\components\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { buscarRelatos } from '../services/firebaseService'; // Certifique-se de que essa importação esteja correta\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapView() {\n  _s();\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    const initMap = () => {\n      const mapInstance = L.map('map').setView([-23.55052, -46.633308], 10);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors'\n      }).addTo(mapInstance);\n      setMap(mapInstance);\n    };\n    if (!map) {\n      initMap();\n    } else {\n      // Função para carregar relatos no mapa\n      const loadRelatos = async () => {\n        try {\n          const relatos = await buscarRelatos();\n          relatos.forEach(relato => {\n            if (relato.localizacao) {\n              const marker = L.marker([relato.localizacao.latitude, relato.localizacao.longitude]).addTo(map);\n              marker.bindPopup(relato.descricao);\n            }\n          });\n        } catch (error) {\n          console.error(\"Erro ao buscar relatos: \", error);\n        }\n      };\n      loadRelatos();\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n_s(MapView, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","buscarRelatos","L","jsxDEV","_jsxDEV","MapView","_s","map","setMap","initMap","mapInstance","setView","tileLayer","attribution","addTo","loadRelatos","relatos","forEach","relato","localizacao","marker","latitude","longitude","bindPopup","descricao","error","console","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Família/Documents/dengue-project/src/components/MapView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { buscarRelatos } from '../services/firebaseService'; // Certifique-se de que essa importação esteja correta\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction MapView() {\r\n    const [map, setMap] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        const initMap = () => {\r\n            const mapInstance = L.map('map').setView([-23.55052, -46.633308], 10);\r\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                attribution: '&copy; OpenStreetMap contributors'\r\n            }).addTo(mapInstance);\r\n            setMap(mapInstance);\r\n        };\r\n\r\n        if (!map) {\r\n            initMap();\r\n        } else {\r\n            // Função para carregar relatos no mapa\r\n            const loadRelatos = async () => {\r\n                try {\r\n                    const relatos = await buscarRelatos();\r\n                    relatos.forEach((relato) => {\r\n                        if (relato.localizacao) {\r\n                            const marker = L.marker([relato.localizacao.latitude, relato.localizacao.longitude]).addTo(map);\r\n                            marker.bindPopup(relato.descricao);\r\n                        }\r\n                    });\r\n                } catch (error) {\r\n                    console.error(\"Erro ao buscar relatos: \", error);\r\n                }\r\n            };\r\n\r\n            loadRelatos();\r\n        }\r\n    }, [map]);\r\n\r\n    return <div id=\"map\" style={{ height: '500px' }}></div>;\r\n}\r\n\r\nexport default MapView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,6BAA6B,CAAC,CAAC;AAC7D,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMU,OAAO,GAAGA,CAAA,KAAM;MAClB,MAAMC,WAAW,GAAGR,CAAC,CAACK,GAAG,CAAC,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;MACrET,CAAC,CAACU,SAAS,CAAC,oDAAoD,EAAE;QAC9DC,WAAW,EAAE;MACjB,CAAC,CAAC,CAACC,KAAK,CAACJ,WAAW,CAAC;MACrBF,MAAM,CAACE,WAAW,CAAC;IACvB,CAAC;IAED,IAAI,CAACH,GAAG,EAAE;MACNE,OAAO,CAAC,CAAC;IACb,CAAC,MAAM;MACH;MACA,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACA,MAAMC,OAAO,GAAG,MAAMf,aAAa,CAAC,CAAC;UACrCe,OAAO,CAACC,OAAO,CAAEC,MAAM,IAAK;YACxB,IAAIA,MAAM,CAACC,WAAW,EAAE;cACpB,MAAMC,MAAM,GAAGlB,CAAC,CAACkB,MAAM,CAAC,CAACF,MAAM,CAACC,WAAW,CAACE,QAAQ,EAAEH,MAAM,CAACC,WAAW,CAACG,SAAS,CAAC,CAAC,CAACR,KAAK,CAACP,GAAG,CAAC;cAC/Fa,MAAM,CAACG,SAAS,CAACL,MAAM,CAACM,SAAS,CAAC;YACtC;UACJ,CAAC,CAAC;QACN,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD;MACJ,CAAC;MAEDV,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,oBAAOH,OAAA;IAAKuB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D;AAAC3B,EAAA,CAnCQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}